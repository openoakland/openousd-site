{"version":3,"file":"component---src-pages-whats-new-js-2408e922205a9b65ad56.js","mappings":"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","sources":["webpack://openousd/./node_modules/@material-ui/icons/ArrowRightAlt.js","webpack://openousd/./node_modules/react-bootstrap/esm/ListGroupItem.js","webpack://openousd/./node_modules/react-bootstrap/esm/ListGroup.js","webpack://openousd/./src/components/new-feature.js","webpack://openousd/./src/pages/whats-new.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.01 11H4v2h12.01v3L20 12l-3.99-4z\"\n}), 'ArrowRightAlt');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"onClick\"];\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // eslint-disable-next-line no-nested-ternary\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import React from \"react\"\nimport { Link } from \"gatsby-plugin-intl\"\n\n// import \"./footer.scss\"\nimport ArrowRightAlt from \"@material-ui/icons/ArrowRightAlt\"\n\nconst NewFeature = props => {\n  return (\n    <div className=\"mt-4\">\n      <h3>{props.heading}</h3>\n      <div>{props.date}</div>\n      <Link to={props.pagePath}>\n        <img\n          src={props.image}\n          alt={props.image_titles}\n          className=\"mw-100 pt-3 border\"\n        />\n      </Link>\n      <div className=\"pt-3\">{props.description}</div>\n      {props.pagePath ? (\n        <div className=\"pt-3\">\n          <Link to={props.pagePath}>\n            {props.pagePathLinkName} <ArrowRightAlt />\n          </Link>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  )\n}\n\nexport default NewFeature\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Container, Row, Col, ListGroup } from \"react-bootstrap\"\nimport { Link, Element } from \"react-scroll\"\nimport { BLOCKS } from \"@contentful/rich-text-types\"\nimport { renderRichText } from \"gatsby-source-contentful/rich-text\"\n\n// import twitterIcon from '../images/icons/twitter-icon-blue.svg'\nimport NewFeature from \"../components/new-feature\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport \"../styles/pages/whats-new.scss\"\n\n// https://dev.to/flexdinesh/accessing-nested-objects-in-javascript--9m4\n//  Access Nested Objects Using Array Reduce\nconst getNestedObject = (nestedObj, pathArr) => {\n  return pathArr.reduce(\n    (obj, key) => (obj && obj[key] !== \"undefined\" ? obj[key] : undefined),\n    nestedObj\n  )\n}\n\n// formatting the date (June 3, 2020) into an id that react scroll can reference (#june-3-2020)\nconst dateToDivID = (date) => {\n  return \"#\" + date.replace(/[\\W_]+/g, \"-\").toLowerCase()\n}\n\n// options to replace formatting for rich text\n// rendering rich text with `renderRIchText` wraps it in a `<p>` so this removes it\nconst options = {\n  renderNode: {\n    [BLOCKS.PARAGRAPH]: (node, children) => children,\n  },\n}\n\nconst WhatsNewPage = ({ data, pageContext }) => {\n  const { title, node_locale } = data.contentfulPage\n  const changelog = data.allContentfulChangelogContent.nodes\n\n  //  formatting date from Contenful, 2020-06-03 => June 3, 2020\n  const dateToString = (date, locale) => {\n    let mydate = new Date(date)\n    const options = { month: \"long\", day: \"numeric\", year: \"numeric\" }\n\n    return mydate.toLocaleDateString(pageContext.language, options)\n  }\n\n  return (\n    <Layout pageClassName=\"whats-new-page\">\n      <Seo title={title} />\n      <Container>\n        <Row>\n          <Col>\n            <h1>{data.contentfulPage.title}</h1>\n          </Col>\n        </Row>\n        <Row className=\"d-flex bd-highlight\">\n          <Col\n            md={4}\n            className=\"d-none d-sm-block p-2 w-100 bd-highlight\"\n            id=\"left-dates\"\n          >\n            <ListGroup variant=\"flush\" className=\"mt-3\">\n              {changelog.map((feature, i) => (\n                <Link\n                  key={i}\n                  className=\"btn\"\n                  activeClass=\"active\"\n                  spy={true}\n                  smooth={true}\n                  offset={-150}\n                  duration={550}\n                  to={dateToDivID(dateToString(feature.date, node_locale))}\n                >\n                  <ListGroup.Item action>\n                    {dateToString(feature.date, node_locale)}\n                  </ListGroup.Item>\n                </Link>\n              ))}\n            </ListGroup>\n          </Col>\n          <Col\n            md={8}\n            className=\"px-3 flex-shrink-1 bd-highlight\"\n            id=\"right-content\"\n          >\n            {changelog.map((feature) => (\n              <Element\n                name={dateToDivID(dateToString(feature.date, node_locale))}\n                style={{ marginBottom: \"80px\" }}\n              >\n                <React.Fragment>\n                  <NewFeature\n                    heading={feature.heading}\n                    date={dateToString(feature.date, node_locale)}\n                    description={renderRichText(feature.description, options)}\n                    pagePath={feature.pagePath}\n                    pagePathLinkName={feature.pagePathLinkName}\n                    image={\n                      feature.imageChangelog\n                        ? \"https:\" +\n                          getNestedObject(feature.imageChangelog, [\n                            \"file\",\n                            \"url\",\n                          ])\n                        : \"\"\n                    }\n                    image_title={\n                      feature.imageChangelog\n                        ? getNestedObject(feature.imageChangelog, [\n                            \"file\",\n                            \"title\",\n                          ])\n                        : \"\"\n                    }\n                  />\n                </React.Fragment>\n              </Element>\n            ))}\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default WhatsNewPage\n\nexport const query = graphql`\n  query WhatsNewPage($language: String) {\n    contentfulPage(slug: { eq: \"whats-new\" }, node_locale: { eq: $language }) {\n      slug\n      title\n      node_locale\n    }\n    allContentfulChangelogContent(\n      filter: { node_locale: { eq: $language } }\n      sort: { fields: date, order: DESC }\n    ) {\n      totalCount\n      nodes {\n        node_locale\n        heading\n        date\n        id\n        tweetId\n        description {\n          raw\n        }\n        pagePathLinkName\n        pagePath\n        imageChangelog {\n          title\n          file {\n            url\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["_interopRequireDefault","_interopRequireWildcard","exports","React","_default","default","createElement","d","_excluded","defaultProps","variant","undefined","active","disabled","ListGroupItem","_ref","ref","bsPrefix","className","action","as","onClick","props","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","href","displayName","horizontal","ListGroup","horizontalVariant","_useUncontrolled","activeKey","initialBsPrefix","_useUncontrolled$as","controlledProps","AbstractNav","Item","heading","date","Link","to","pagePath","src","image","alt","image_titles","description","pagePathLinkName","ArrowRightAlt","getNestedObject","nestedObj","pathArr","reduce","obj","key","dateToDivID","replace","toLowerCase","options","renderNode","BLOCKS","node","children","data","pageContext","contentfulPage","title","changelog","node_locale","allContentfulChangelogContent","nodes","dateToString","locale","Date","toLocaleDateString","language","month","day","year","pageClassName","Container","Row","Col","md","id","map","feature","i","activeClass","spy","smooth","offset","duration","name","style","marginBottom","renderRichText","imageChangelog","image_title"],"sourceRoot":""}